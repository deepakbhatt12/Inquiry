@model DcmsMobile.Inquiry.Areas.Inquiry.CartonAreaEntity.CartonLocationViewModel
@{
    Layout = MVC_Inquiry.Inquiry.SharedViews.Views._layoutInquiry;
    ViewBag.Title = string.Format("Carton Location {0}", Model.LocationId);
}
}
<div class="container">
    <div class="page-header">
        <h1>
            Carton Location @Html.DisplayFor(m => m.LocationId) <small>
                Area <a href="@Url.Action(MVC_Inquiry.Inquiry.CartonAreaEntity.CartonArea(Model.Area))">@Html.DisplayFor(m => m.Area)</a> Building
                @Html.DisplayFor(m => m.WhId)
            </small>
            <a class="btn btn-sm" href="@Url.Action(MVC_Inquiry.Inquiry.CartonAreaEntity.CartonLocationExcel(Model.LocationId))">
                <span class="glyphicon glyphicon-export"></span> Excel
            </a>
        </h1>
    </div>
    <ul class="list-inline">
        <li>
            Capacity:
            @Html.DisplayFor(m => m.Capacity)
        </li>
        <li>
            Assigned SKU:
            @Html.DisplayFor(m => m.AssignedStyle),
            @Html.DisplayFor(m => m.AssignedColor),
            @Html.DisplayFor(m => m.AssignedDimension),
            @Html.DisplayFor(m => m.AssignedSkuSize)
        </li>
    </ul>
    @if (@*Model.PalletCartons.Count == 0 &&*@ Model.Cartons.Count == 0)
    {
        <div class="alert alert-info" role="alert"> Location is empty</div>
    }
    else
    {
        <div class="list-group">
            <h3 class="list-group-item" style="text-align:center">
                Cartons At Location
                @if (Model.TotalCarton > 100)
                {
                    <small><em>Listing 100 out of @Model.TotalCarton carton(s)</em></small>
                }
                else
                {
                    <small><em>@Model.TotalCarton carton(s)</em></small>
                }
            </h3>
            @for (var i = 0; i < Model.Cartons.Count; ++i)
            {
                if (i == 0 || Model.Cartons[i].PalletId != Model.Cartons[i - 1].PalletId)
                {
                    <a class="list-group-item active">
                        Pallet @Html.DisplayFor(m => m.Cartons[i].PalletId)
                        <span class="badge pull-right">@Model.Cartons.Count(p => p.PalletId == Model.Cartons[i].PalletId) cartons</span>
                    </a>
                }
               
                    <a class="list-group-item" href="@Url.Action(MVC_Inquiry.Inquiry.CartonEntity.Carton(Model.Cartons[i].CartonId))">

                        @(i + 1) &bull;
                        @Html.DisplayFor(m => m.Cartons[i].CartonId)
                        <span class="pull-right"><span class="glyphicon glyphicon-chevron-right"></span></span>
                        <span class="badge pull-right">@Html.DisplayFor(m => m.Cartons[i].SKUQuantity) pcs</span>
                    </a>
              
                }
            @if (Model.Cartons.Count < Model.TotalCarton)
            {
                <a class="list-group-item list-group-item-info" href="@Url.Action(MVC_Inquiry.Inquiry.CartonAreaEntity.CartonLocationExcel(Model.LocationId))">
                    <span class="glyphicon glyphicon-export"></span> See more in Excel
                </a>
            }
            
        </div>
    }
</div>