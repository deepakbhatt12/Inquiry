@model DcmsMobile.Inquiry.Areas.Inquiry.PickslipEntity.PickslipViewModel
@{
    Layout = MVC_Inquiry.Inquiry.SharedViews.Views._layoutInquiry;
    ViewBag.Title = Model.ModelTitle;
}
@*@section script {
        <style type="text/css">
            /* h1 within header is specially styles so that the heading uses full width of the screen. Do not use buttons in this header.
                Use h2 to h9 if you want to obtain default jquery mobile styling.*/
            .ui-header h1.ui-title {
                margin-left: 1mm;
                margin-right: 1mm;
            }
        </style>
        <script type="text/javascript">
            $(document).ready(function () {
                $("#btnPrint").click(function () {
                    if ($('input:checkbox:checked', '#formPrint').length === 0) {
                        $('#divError').show().addClass('validation-summary-errors');
                        return false;
                    }
                });
            });
        </script>
    }*@
<div class="container">
    <div class="page-header">
        <h1>
            @Model.ModelTitle <small>
                @(Model.ExportFlag ? "International" : "Domestic")

            </small>
            <a class="btn btn-sm" href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.PickslipExcel(Model.PickslipId))">
                <span class="glyphicon glyphicon-export"></span> Excel
            </a>
        </h1>
        @if (Model.PickslipCancelDate == null)
        {
            <div class="progress">
                <div class="progress-bar progress-bar-@(Model.IsComplete ? "success" : "warning")" role="progressbar" aria-valuenow="@(Model.PercentComplete * 100)" aria-valuemin="0" aria-valuemax="100"
                     style="width: @(Model.PercentComplete * 100)%">
                    <span>@Html.DisplayFor(m => m.PercentComplete) Pieces Picked</span>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-warning" role="alert">Cancelled On:  @Html.DisplayFor(m => m.PickslipCancelDate)</div>
        }
        @if (Model.TransferDate != null)
        {
            <div class="alert alert-warning" role="alert">Transferred On:  @Html.DisplayFor(m => m.TransferDate)</div>
        }
    </div>

    <ul class="list-group">
        <li class="list-group-item">
            <a href="@Url.Action(MVC_Inquiry.Inquiry.CustomerEntity.Customer(Model.CustomerId))" class="btn btn-lg">
                @Model.CustomerDisplayName
            </a>

            Dept @Html.DisplayFor(m => m.CustomerDepartmentId) &bull;
            DC @Html.DisplayFor(m => m.CustomerDC) &bull; Store @Html.DisplayFor(m => m.CustomerStore)
            &bull; Vendor # @Html.DisplayFor(m => m.VendorNumber)


        </li>
        <li class="list-group-item">
            <a class="btn btn-lg" href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.Po(Model.PoId, Model.CustomerId, Model.Iteration.Value))">
                PO @Html.DisplayFor(m => m.PoId)
            </a>
            Imported @Html.DisplayFor(m => m.ImportDate) &bull;
            Start @Html.DisplayFor(m => m.StartDate) &bull; DC cancel @Html.DisplayFor(m => m.DcCancelDate)
        </li>
        <li class="list-group-item">
            @if (Model.BucketId.HasValue)
            {
                <a class="btn btn-lg" href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.Wave(Model.BucketId.Value))">
                    Pick Wave @Model.BucketId
                </a>
                <span>
                    Created By
                    @Html.DisplayFor(m => m.BucketCreatedBy)
                    on @Html.DisplayFor(m => m.BucketCreatedOn)
                </span>
            }
            else
            {
                <span>Not in Pick Wave</span>
            }
        </li>
        <li class="list-group-item">
            @if (!string.IsNullOrWhiteSpace(Model.ShippingId))
            {
                <a class="btn btn-lg" href="@Url.Action(MVC_Inquiry.Inquiry.ShipmentEntity.OutboundShipment(Model.ShippingId))">
                    BOL @Html.DisplayFor(m => m.ShippingId)
                </a>
                <span>Created by @Html.DisplayFor(m => m.ShipperName) for @Html.DisplayFor(m => m.CarrierId)</span>
                <span class="badge">
                    @if (Model.ShipmentOnHold)
                    {
                        @:Hold
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.ShipDate)
                    }
                </span>
                <p>@Html.DisplayFor(m => m.ShipAddress)</p>
            }
            else
            {
                <span>Not in BOL. Carrier @Html.DisplayFor(m => m.CarrierId)</span>
            }
        </li>
        <li class="list-group-item">
            <ul class="list-inline">
                <li>Received from ERP @Html.DisplayFor(m => m.ErpId)</li>
                <li>
                    <span class="glyphicon glyphicon-@(Model.AsnFlag ? "ok text-success" : "remove")"></span> ASN Flag
                </li>
            </ul>
        </li>
    </ul>
    @if (Model.AllBoxes.Count > 0)
    {
        <div class="navbar navbar-default" role="navigation">
            <div class="container-fluid">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#dlgPrint">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <span class="navbar-brand">Print Packing Slips</span>
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="dlgPrint">
                    @using (Html.BeginForm(MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlip(), FormMethod.Post, new
            {
                id = "formPrint",
                @class = "navbar-form navbar-left",
                role = "form"
            }))
                    {
                        <input type="hidden" name="@MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlipParams.pickslipId"
                               value="@Model.PickslipId" />
                        <div class="form-group">
                            <label for="tbCopies">Copies</label>
                            <input id="tbCopies" type="number" name="@MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlipParams.numberOfCopies"
                                   value="1" maxlength="2" required class="form-control"
                                   placeholder="Copies" size="2" />
                        </div>
                        <div class="btn-group" data-toggle="buttons">
                            <label class="btn btn-default btn-sm">
                                <input type="checkbox" id="cbPrintPackingslip" name="@MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlipParams.printPackingSlip" value="true" /> Box
                            </label>
                            <label class="btn btn-default btn-sm">
                                <input type="checkbox" name="@MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlipParams.printMasterPackingslip" checked="checked" value="true" /> Master
                            </label>
                        </div>
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.PrinterId, Model.PrinterList, "Printer...", new
       {
           id = "ddlPrinter",
           required = "required",
           name = @MVC_Inquiry.Inquiry.PickslipEntity.PrintPackingSlipParams.printerid,
           @class = "form-control"
       })
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Print</button>
                        </div>
                    }
                </div><!-- /.navbar-collapse -->
            </div><!-- /.container-fluid -->
        </div>

        @Html.Partial(MVC_Inquiry.Inquiry.SharedViews.Views._boxListPartial)
    }
    else
    {
        <span>There are no Boxes in this pickslip</span>
    }
    @if (Model.AllSku.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-condensed table-bordered">
                <caption><h3>Ordered SKUs</h3></caption>
                <thead>
                    <tr>
                        <th>#</th>
                        <th style="text-align:center">SKU<sup>&#8743;</sup></th>
                        <th style="text-align:center">Pieces</th>
                        <th style="text-align:center">VWH</th>
                        <th style="text-align:center">Quality</th>
                        <th style="text-align:center">$ Retail Price</th>
                        <th colspan="2" style="text-align:center">Constraints</th>
                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th style="text-align:center">Pieces Per Box</th>
                        <th style="text-align:center">Pieces Per Package</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.AllSku.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td style="text-align:center">
                                @Html.ActionLink(Model.AllSku[i].DisplaySku, MVC_Inquiry.Inquiry.SkuEntity.Sku(Model.AllSku[i].SkuId))
                            </td>
                            <td style="text-align:right">@Html.DisplayFor(m => Model.AllSku[i].Pieces)</td>
                            <td>@Html.DisplayFor(m => Model.AllSku[i].VwhId)</td>
                            <td>@Html.DisplayFor(m => Model.AllSku[i].QualityCode)</td>
                            <td style="text-align:right">@Html.DisplayFor(m => Model.AllSku[i].RetailPrice)</td>
                            <td style="text-align:right">@Html.DisplayFor(m => Model.AllSku[i].DisplayPiecesPerBox)</td>
                            <td style="text-align:right">@Html.DisplayFor(m => Model.AllSku[i].PiecesPerPackage)</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="success">
                        <td>Total</td>
                        <td></td>
                        <td style="text-align:right">@string.Format("{0:N0}", Model.AllSku.Sum(c => c.Pieces))</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
    else
    {
        <span>No Orders SKUs</span>
    }
</div>
