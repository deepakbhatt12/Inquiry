@model DcmsMobile.Inquiry.Areas.Inquiry.PickslipEntity.IPickslipListViewModel
@{
    var showExportFlag = Model.AllPickslips.Any(p => !(string.IsNullOrEmpty(p.ExportFlag)));
}

@for (int i = 0; i < Model.AllPickslips.Count; i++)
{
    <a href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.Pickslip(Model.AllPickslips[i].PickslipId))" class="list-group-item">

        <div class="row">
            <div class="col-md-2">
                <h4>
                    <strong>@Html.DisplayFor(m => m.AllPickslips[i].PickslipId)</strong>
                </h4>
            </div>
            <div class="col-md-4">
                <dl class="dl-horizontal">
                    @if (string.IsNullOrWhiteSpace(Model.AllPickslips[i].ShippingId))
                    {
                        <dt>Shipment</dt>
                        <dd> @Html.DisplayFor(m => m.AllPickslips[i].ShippingId)</dd>
                    }
                    @if (Model.AllPickslips[i].ImportDate != null)
                    {
                        <dt>Imported</dt>
                        <dd>@Html.DisplayFor(m => m.AllPickslips[i].ImportDate)</dd>
                    }
                    @if (Model.AllPickslips[i].PickslipCancelDate != null || Model.AllPickslips[i].ValidationDate != null)
                    {
                        <dt>Completed</dt>
                        <dd>@(Model.AllPickslips[i].PickslipCancelDate != null ? Html.DisplayFor(m => m.AllPickslips[i].PickslipCancelDate) : Html.DisplayFor(m => m.AllPickslips[i].ValidationDate))</dd>
                    }
                    @if (Model.AllPickslips[i].TransferDate != null)
                    {
                        <dt>Transferred</dt>
                        <dd>@Html.DisplayFor(m => m.AllPickslips[i].TransferDate)</dd>
                    }
                </dl>
            </div>
            <div class="col-md-4">
                <div class="progress" style="margin-bottom:0px;">
                    <div class="progress-bar" role="progressbar" aria-valuenow="@Model.AllPickslips[i].CompletedPitchedPieces"
                         aria-valuemin="0" aria-valuemax="@Model.AllPickslips[i].TotalQuantityOrdered"
                         style="width: @(Model.AllPickslips[i].PickingPercentComplete*100)%;min-width:30px;">
                        @Html.DisplayFor(m => m.AllPickslips[i].PickingPercentComplete)
                    </div>                  

                </div>
                @(Model.AllPickslips[i].CompletedPitchedPieces ?? 0) of @Model.AllPickslips[i].TotalQuantityOrdered (@Html.DisplayFor(m => m.AllPickslips[i].PickingPercentComplete))

            </div>
            <div class="col-md-2">
                @if (Model.AllPickslips[i].IsComplete)
                {
                    if (!string.IsNullOrEmpty(Model.AllPickslips[i].ShippingId) && !Model.AllPickslips[i].ShipmentOnHold)
                    {
                        <span class="label label-success">Shipped</span>
                    }
                    else
                    {
                        <span class="label label-success">Completed</span>

                    }
                }
                else if (Model.AllPickslips[i].PickslipCancelDate != null)
                {
                    <span class="label label-danger">Cancelled</span>

                }
                @if (showExportFlag)
                {
                    <text>Export</text> <strong>@Html.DisplayFor(m => m.AllPickslips[i].ExportFlag)</strong>
                }
                <span class="pull-right">
                    <span class="glyphicon glyphicon-chevron-right">
                    </span>
                </span>
            </div>
        </div>


    </a>

}


