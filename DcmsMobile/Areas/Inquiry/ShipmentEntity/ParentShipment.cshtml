@model  DcmsMobile.Inquiry.Areas.Inquiry.ShipmentEntity.ParentShipmentViewModel
@{
    Layout = MVC_Inquiry.Inquiry.SharedViews.Views._layoutInquiry;
    ViewBag.Title = string.Format("BOL {0}", Model.ParentShippingId);
}

<div class="container">
    <div class="page-header">
        <h3>
            @ViewBag.Title
            <small>
                @if (Model.OnHoldFlag)
                {
                    <text>Scheduled to ship</text>
                }
                else
                {
                    <span class="label label-success">Shipped @Html.DisplayFor(m => m.ShippingDate)</span>
                }
                <em>@Html.DisplayFor(m => m.FreightChargeTerm)</em> via
                @Html.DisplayFor(m => m.CarrierId): @Html.DisplayFor(m => m.CarrierName)
                ETA  @Html.DisplayFor(m => m.ArrivalDate)
            </small>
            @if (Model.ShipmentDetail.Count > 0)
            {
                <a class="btn btn-sm" href="@Url.Action(MVC_Inquiry.Inquiry.ShipmentEntity.OutboundShipmentExcel(Model.ParentShippingId))">
                    <span class="glyphicon glyphicon-export"></span> Excel
                </a>
            }
        </h3>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <!-- Button trigger modal -->
            <button class="btn btn-primary pull-right" data-toggle="modal" data-target="#printDialog">
                Print
            </button>
            @Html.DisplayFor(m => m.TotalCurrentPieces) of @Html.DisplayFor(m => m.TotalExpectedPieces) Pieces Shipped in @Html.DisplayFor(m => m.TotalCartons) Cartons * Weight @Html.DisplayFor(m => m.TotalWeight)
            <div class="progress" style="margin-bottom:0px;max-width:94%">
                <div class="progress-bar" role="progressbar" aria-valuenow="2"
                     aria-valuemin="0" aria-valuemax="100" style="width: @Html.DisplayFor(m => m.TotalPercentComplete)%;min-width:2%;">
                    @Html.DisplayFor(m => m.TotalPercentComplete)%
                </div>
            </div>

        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="dl-horizontal">
                        <dt>Master BOL</dt>
                        <dd><a href="@Url.Action(MVC_Inquiry.Inquiry.ShipmentEntity.MasterBol(Model.MBolID))"> @Html.DisplayFor(m => m.MBolID)</a></dd>
                        <dt>Customer</dt>
                        <dd>
                            <a href="@Url.Action(MVC_Inquiry.Inquiry.CustomerEntity.Customer(Model.CustomerID))">
                                @Html.DisplayFor(m => m.CustomerID) : @Html.DisplayFor(m => m.CustomerName)
                            </a>
                        </dd>
                        <dt>Appointment Number</dt>
                        <dd>@Html.DisplayFor(m => m.AppointmentNumber)</dd>
                    </dl>
                </div>
                <div class="col-md-3">
                    <strong>Ship From</strong>
                    <address>
                        <div>
                            @Html.DisplayFor(m => m.FromCompany)
                        </div>
                        @foreach (var line in Model.FromAddress.Where(p => !string.IsNullOrEmpty(p)))
                        {
                            <div>
                                @line
                            </div>
                        }
                        <div>
                            @Model.FromCity, @Model.FromState @Model.FromZipCode
                        </div>
                        <div>
                            @Model.FromCountry
                        </div>
                    </address>

                </div>
                <div class="col-md-3">
                    <strong>Ship To</strong>
                    <address>
                        @foreach (var line in Model.ToAddress.Where(p => !string.IsNullOrEmpty(p)))
                        {
                            <div>
                                @line
                            </div>
                        }
                        <div>
                            @Model.City, @Model.State @Model.ZipCode
                        </div>
                        <div>
                            @Model.Country
                        </div>
                    </address>

                </div>
            </div>
        </div>
    </div>






    <div class="modal fade" id="printDialog" tabindex="-1" role="dialog" aria-labelledby="printDialogLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content list-group">
                <div class="list-group-item active">
                    <span class="close glyphicon glyphicon-remove" data-dismiss="modal" aria-hidden="true"></span>
                    <h4 class="modal-title">Print BOL</h4>
                </div>
                <form role="form" action="@Url.Action(MVC_Inquiry.Inquiry.ShipmentEntity.PrintBol())" id="frmPrinter" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="@MVC_Inquiry.Inquiry.ShipmentEntity.PrintBolParams.parentShippingId" value="@Model.ParentShippingId" />
                        <div>
                            <label>Printer<abbr>*</abbr></label>
                            @Html.DropDownListFor(m => m.PrinterId, Model.PrinterList, "Printer...", new
                                {
                                    required = "required",
                                    @class = "form-control"
                                })
                        </div>
                        <small>1 BOL will be printed for shipment @Model.ParentShippingId</small>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button id="btnPrintBox" class="btn btn-primary" type="submit">Print</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <ul class="list-group">
        @for (int i = 0; i < Model.ShipmentDetail.Count; i++)
        {
            <li class="list-group-item">
                <div class="row">
                    <div class="col-md-3">
                        @(i + 1)) BOL @Html.DisplayFor(m => m.ShipmentDetail[i].ShippingId)
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(m => m.ShipmentDetail[i].CurrentPieces)
                        of
                        @Html.DisplayFor(m => m.ShipmentDetail[i].ExpectedPieces) Pieces Shipped
                        in @Html.DisplayFor(m => m.ShipmentDetail[i].TotalBoxes) Cartons * Weight @Html.DisplayFor(m => m.ShipmentDetail[i].Weight)
                        <div class="progress" style="margin-bottom:0px;">
                            <div class="progress-bar" role="progressbar" aria-valuenow="2"
                                 aria-valuemin="0" aria-valuemax="100" style="width: @Html.DisplayFor(m => m.ShipmentDetail[i].PercentComplete)%;min-width:2%;">
                                @Html.DisplayFor(m => m.ShipmentDetail[i].PercentComplete)%
                            </div>
                        </div>
                    </div>
                </div>
            </li>


            if (Model.OnHoldFlag)
            {
                <li class="list-group-item">
                    @if (Model.ShipmentDetail[i].CountFrozenBuckets == 0 && Model.ShipmentDetail[i].IncompletePickslips == 0 && Model.ShipmentDetail[i].NonShippableBoxes == 0)
                        {
                    <p class="text-success"><span class="glyphicon glyphicon-info-sign"></span>Shipment ready to ship</p>
                    }
                    @if (Model.ShipmentDetail[i].CountFrozenBuckets > 0)
                        {
                    <p class="text-danger">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        @Html.DisplayFor(m => m.ShipmentDetail[i].CountFrozenBuckets) of
                        @Html.DisplayFor(m => m.ShipmentDetail[i].TotalBuckets) buckets are frozen
                        Example @Html.ActionLink(Model.ShipmentDetail[i].MinBucketSuggestion.ToString(), MVC_Inquiry.Inquiry.PickslipEntity.Wave(Model.ShipmentDetail[i].MinBucketSuggestion))
                        @if (Model.ShipmentDetail[i].MinBucketSuggestion != Model.ShipmentDetail[i].MaxBucketSuggestion)
                            {                       
                        @Html.ActionLink(Model.ShipmentDetail[i].MaxBucketSuggestion.ToString(), MVC_Inquiry.Inquiry.PickslipEntity.Wave(Model.ShipmentDetail[i].MaxBucketSuggestion))
                        }
                    </p>
                    }
                    @if (Model.ShipmentDetail[i].IncompletePickslips > 0)
                        {
                    <p class="text-danger">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        @Html.DisplayFor(m => m.ShipmentDetail[i].IncompletePickslips) of
                        @Html.DisplayFor(m => m.ShipmentDetail[i].TotalPickslips) pickslips need to be validate or cancel.Example :
                         @Html.ActionLink(Model.ShipmentDetail[i].MinPickslipSuggestion.ToString(), MVC_Inquiry.Inquiry.PickslipEntity.Pickslip(Model.ShipmentDetail[i].MinPickslipSuggestion))
                        @if (Model.ShipmentDetail[i].MaxPickslipSuggestion != Model.ShipmentDetail[i].MinPickslipSuggestion)
                            {
                                @Html.ActionLink(Model.ShipmentDetail[i].MaxPickslipSuggestion.ToString(), MVC_Inquiry.Inquiry.PickslipEntity.Pickslip(Model.ShipmentDetail[i].MaxPickslipSuggestion))
                            }                      
                    </p>
                    }

                    @if (Model.ShipmentDetail[i].NonShippableBoxes > 0)
                        {
                    <p class="text-danger">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        @Html.DisplayFor(m => m.ShipmentDetail[i].NonShippableBoxes) of
                        @Html.DisplayFor(m => m.ShipmentDetail[i].TotalBoxes) boxes are not validated.Example :
                       @Html.ActionLink(Model.ShipmentDetail[i].MinBoxSuggestion.ToString(), MVC_Inquiry.Inquiry.BoxEntity.Box(Model.ShipmentDetail[i].MinBoxSuggestion))
                        @if (Model.ShipmentDetail[i].MaxBoxSuggestion != Model.ShipmentDetail[i].MinBoxSuggestion)
                            {
                                @Html.ActionLink(Model.ShipmentDetail[i].MaxBoxSuggestion.ToString(), MVC_Inquiry.Inquiry.BoxEntity.Box(Model.ShipmentDetail[i].MaxBoxSuggestion))
                            }                        
                    </p>
                    }
                </li>
            }
        }
    </ul>
</div>
